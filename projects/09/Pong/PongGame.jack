
/**
 * Implements the Pong game.
 * In this game you can move a black borad at the bottom of the screen
 * There will be a square floating around the screen
 * In the beginning, the square is located at the top-left corner
 * of the screen. The arrow keys are used to move the board.
 * When the square moves down, you need to catch up it and it will be fly out.
 * Press any key except for 'q' to start the game.
 * The 'q' key is used to quit the game.
 * Enjoy your game!
 */
 
class PongGame {


    field Board board;

    field Square square;

    field int direction; // 1=left,2=right

    field boolean exit;

    /** Constructs a new Pong Game. */
    constructor PongGame new() {

        //set the speed and width
        let board = Board.new(6,100);
        let direction = 0;

        //set the start location of square
        let square = Square.new(0,0);
        let exit = false;
        return this;
    }

    /** Deallocates the object's memory. */
    method void dispose() {

        do Screen.setColor(false);
        do Screen.drawRectangle(0, 0, 511, 255);
        do board.dispose();
        do square.dispose();
        do Memory.deAlloc(this);
        

        return;
    }

    /** Starts the game. Handles inputs from the user that control
     *  the Board's movement, direction. */

    method void run() {
        var char key;
        while (~exit) {
            // waits for a key to be pressed.
            while (key = 0) {
                if(exit)
                {
                    return;
                }
                let key = Keyboard.keyPressed();
                let direction = 0;
                //whatever square needs to move
                do moveAll();
           
            }

            //Q
            if (key = 81) {
                let exit = true;
            }
            if (key = 130) {
                let direction = 1;
            }
            if (key = 132) {
                let direction = 2;
            }

            // waits for the key to be released.
            while (~(key = 0)) {
                if(exit)
                {
                    return;
                }
                let key = Keyboard.keyPressed();
                do moveAll();
            }
        }
            
        return;
	}

    //check whether collision happend
    method boolean checkPong()
    {
        var int boardX;
        var int squareX;
        let boardX = board.getX();
        let squareX = square.getX();
        if(boardX > (squareX + square.getsize()))
        {
            return false;
        }
        if((boardX + board.getwidth()) < squareX)
        {
            return false;
        }
        return true;
    }

    //change the speed of square when collision happens
    method void speedAdjustment()
    {
        if(square.getX() < (board.getX() + (board.getwidth() / 2)))
        {
            if(square.getdir() = 1)
            {
                if(direction = 0)
                {
                    do square.speedup(1);
                }
                if(direction = 1)
                {
                    do square.speedup(2);
                }
                if(direction = 2)
                {
                    do square.slowdown(1);
                }
            }
            else
            {
                if(direction = 0)
                {
                    do square.slowdown(1);
                }
                if(direction = 1)
                {
                    do square.turnXBack();
                }
                if(direction = 2)
                {
                    do square.slowdown(2);
                }
            }
            
        }
         if(square.getX() > (board.getX() + (board.getwidth() / 2)))
        {
            if(square.getdir() = 1)
            {
                if(direction = 0)
                {
                    do square.slowdown(1);
                }
                if(direction = 2)
                {
                    do square.turnXBack();
                }
                if(direction = 1)
                {
                    do square.slowdown(2);
                }
            }
            else
            {
                if(direction = 0)
                {
                    do square.speedup(1);
                }
                if(direction = 2)
                {
                    do square.speedup(2);
                }
                if(direction = 1)
                {
                    do square.slowdown(1);
                }
            }
        }
        return;
    }


    /** Move board and square */
    method void moveAll() {

        var int squareY;
        var boolean successPong;
        let successPong = true;
        let squareY = square.getY();
        if(squareY > 238)
        {
            let successPong = checkPong();
            if(~successPong)
            {
                
                let exit = true;
                return;
            }
            do square.turnYBack();
            do speedAdjustment();
        } 

        //move left
        if (direction = 1) {
            do board.moveLeft();
        }

        //move right
        if (direction = 2) {
            do board.moveRight();
        }

        //move square
        do square.moveOneStep();
        do Sys.wait(30); // Delays the next movement.
        return;
    }
}
